# Check build decl loading.
#
# RUN: %{llbuild} ninja load-manifest %s > %t 2> %t.err
# RUN: %{FileCheck} < %t %s
# RUN: %{FileCheck} --check-prefix=CHECK-ERR < %t.err %s

# CHECK: build "target1": phony
build target1: phony

# CHECK: build "target2": phony "explicit-a" "explicit-b" | "implicit-a" "implicit-b" || "order-a" "order-b"
build target2: phony explicit-a explicit-b | implicit-a implicit-b || order-a order-b

# CHECK-ERR: builds.ninja:[[@LINE+1]]:15: error: unknown rule
build target3: no-rule

# CHECK: build "target4": phony
# CHECK-NEXT: binding-a = "value1"
# CHECK-NEXT: binding-b = "value2"
build target4: phony
      binding-a = value1
      binding-b = value2

# Check that we properly evaluate values in bindings (which do not use prior
# bindings in the decl).
#
# CHECK: build "target5": phony
# CHECK-NEXT: target5_varA = "A C"
# CHECK-NEXT: target5_varC = "END"
target5_varA = A
build target5: phony
      target5_varA = B
      target5_varA = ${target5_varA} C
      target5_varC = END

# Check that we diagnose empty paths in build statements.
#
# CHECK-ERR: builds.ninja:[[@LINE+3]]:14: error: empty output path
# CHECK-ERR: builds.ninja:[[@LINE+2]]:36: error: empty input path
target6_var =
build target6 ${target6_var}: phony ${target6_var}
